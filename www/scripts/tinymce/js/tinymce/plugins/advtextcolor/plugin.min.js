var bool = false;
tinymce.PluginManager.add ("advtextcolor", function (editor, path)
{
	if (typeof more_color != "string")
	{
		more_color = 'more colors';
	}
	editor.settings.textcolor_map =
			[
				"000000",
				"Black",
				"993300",
				"Burnt orange",
				"333300",
				"Dark olive",
				"003300",
				"Dark green",
				"003366",
				"Dark azure",
				"000080",
				"Navy Blue",
				"333399",
				"Indigo",
				"333333",
				"Very dark gray",
				"800000",
				"Maroon",
				"FF6600",
				"Orange",
				"808000",
				"Olive",
				"008000",
				"Green",
				"008080",
				"Teal",
				"0000FF",
				"Blue",
				"666699",
				"Grayish blue",
				"808080",
				"Gray",
				"FF0000",
				"Red",
				"FF9900",
				"Amber",
				"99CC00",
				"Yellow green",
				"339966",
				"Sea green",
				"33CCCC",
				"Turquoise",
				"3366FF",
				"Royal blue",
				"800080",
				"Purple",
				"999999",
				"Medium gray",
				"FF00FF",
				"Magenta",
				"FFCC00",
				"Gold",
				"FFFF00",
				"Yellow",
				"00FF00",
				"Lime",
				"00FFFF",
				"Aqua",
				"00CCFF",
				"Sky blue",
				"993366",
				"Brown",
				"C0C0C0",
				"Silver",
				"FF99CC",
				"Pink",
				"FFCC99",
				"Peach",
				"FFFF99",
				"Light yellow",
				"CCFFCC",
				"Pale green",
				"CCFFFF",
				"Pale cyan",
				"99CCFF",
				"Light sky blue",
				"CC99FF",
				"Plum",
				"FFFFFF",
				"White"
			];

	var colorPicker;
	var storedColors = new Array ();

	if (localStorage.getItem ('color'))
		storedColors = JSON.parse (localStorage["color"]);

	storedColors.forEach (function (item)
	{
		editor.settings.textcolor_map.push (item.substring (1));
		editor.settings.textcolor_map.push (item);
	});

	function showPannel ()
	{
		var html = '';
		var i = 0;
		while (editor.settings.textcolor_map[i] != null)
		{
			var div = '<div data-color="#' + editor.settings.textcolor_map[i] + '" style="float:left;cursor:pointer;background-color:#' + editor.settings.textcolor_map[i] + ';width:12px;height:12px;margin:2px;border:1px solid black"></div>';
			i += 2;
			html += div;
		}

		return '<div style="width:200px;">' + html + '<div class="clearfix"></div><button id="advtextcolor-showmorecolor" data-action="advtextcolor-popup" style="margin:0 auto;cursor:pointer;width:auto;"><a data-action="advtextcolor-popup" href="#">'+more_color+'</a></button></div>';
	}

	function onPannelClick (t)
	{
		console.log(t.target.getAttribute ('id'));
		if (t.target.getAttribute ('data-color'))
		{
			editor.execCommand (this.parent ().settings.selectcmd, !1, t.target.getAttribute ('data-color'));
			this.parent ().hidePanel ();
		} else if (t.target.getAttribute ('data-action') == 'advtextcolor-popup')
		{
			this.parent ().hidePanel ();
			colorPicker = $.farbtastic ("#picker");
			colorPicker.linkTo (function (color)
			{
				$ ("#color").val (color);
			});
			$ ("#advtextcolor-previouscolor").html ('');
			storedColors.forEach (function (item)
			{
				var div = $ ('<div></div>').css ({
					'background-color':item,
					'width':'12px',
					'height':'12px',
					'margin':'2px',
					'border':'1px solid #808080',
					'float':'left',
					'cursor':'pointer'}).click (function ()
				{
					$ ("#color").val (item);
					colorPicker.setColor (item);

				});

				$ ("#advtextcolor-previouscolor").append (div);
			});
			$ ("#advtextcolor-dialog").dialog ({draggable:false, buttons:
					[
						{ text:"Ok", click:function ()
						{
							var color = $ ("#color").val ();
							storedColors.push (color);

							storedColors = storedColors.filter (function (elem, pos)
							{
								return storedColors.indexOf (elem) == pos;
							})
							localStorage['color'] = JSON.stringify (storedColors);
							editor.settings.textcolor_map.push (color.substring (1));
							editor.settings.textcolor_map.push (color);
							editor.settings.textcolor_map = editor.settings.textcolor_map.filter (function (elem, pos)
							{
								return editor.settings.textcolor_map.indexOf (elem) == pos;
							})
							tinymce.activeEditor.formatter.register ('mycustomformat', {
								inline:'span',
								styles:{color:color}
							});

							tinymce.activeEditor.formatter.apply ('mycustomformat');
							$ (this).dialog ("close");
						} }
					] });
		}
	}

	function onButtonClick ()
	{
		this._color && editor.execCommand (this.settings.selectcmd, !1, this._color)
	}

	$ (document).ready (function ()
	{
		if (bool == false)
		{
			bool = true;
			$ ('head').append ("<script src='"+path+"/dependency/farbtastic.js'></script><link href='"+path+"/dependency/farbtastic.css' rel='stylesheet' type='text/css'/>");
			$ ('body').append ('<div style="display:none;" id="advtextcolor-dialog" class="advtextcolor"><input type="text" id="color" name="color" value="#000000" /><div id="picker"></div><div id="advtextcolor-previouscolor"></div></div>');
		}

		editor.addButton ("forecolor", {type:"colorbutton",
			tooltip:"Text color",
			popoverAlign:"bc-tl",
			selectcmd:"ForeColor",
			panel:{html:showPannel, onclick:onPannelClick},
			onclick:onButtonClick}), editor.addButton ("backcolor", {type:"colorbutton",
			tooltip:"Background color",
			popoverAlign:"bc-tl",
			selectcmd:"HiliteColor",
			panel:{html:showPannel, onclick:onPannelClick},
			onclick:onButtonClick});
	});
});
